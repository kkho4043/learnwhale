<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--시험리스트 -->
<mapper namespace="exam">


	<insert id="examinsert" parameterType="ExamVo">
	<![CDATA[
	insert into exam VALUES(
						seq_exam_no.nextval,
						#{classNo},
						#{examTitle},
						#{examType},
						#{time},
						TO_DATE(#{startDate},'yyyy-mm-dd HH24:mi'),
						TO_DATE(#{endDate},'yyyy-mm-dd HH24:mi'),
						sysdate
						)
	]]>
		<selectKey keyProperty="examNo" resultType="int" order="AFTER">
			SELECT seq_exam_no.CURRVAL FROM DUAL
		</selectKey>
	</insert>

	<insert id="questioninsert" parameterType="map">
	<![CDATA[
	insert into question VALUES(
						seq_question_no.nextval,
						#{examNo},
						#{problemNo},
						#{point},
						#{order}
						
						)
	
	]]>
	</insert>
	<!--시험 출제시 solve insert를위한 select -->
	<select id="selectjusers" resultType="int" parameterType="int">
		<![CDATA[
			select      
				join_no            
			from  join_users
			where class_no = #{classNo}
			and type != '선생님'
		]]>
	</select>

	<select id="selectsquestion" resultType="int" parameterType="int">
		<![CDATA[
			select      
			    question_no          
			from question
			where exam_no = #{examNo}
		]]>
	</select>
	<insert id="insertsolve" parameterType="map">
		<![CDATA[
			insert into solve
			values(seq_solve_no.nextval,#{joinNo} ,#{examNo} ,null,null,null,'출제')
		]]>
	</insert>

	<select id="examList" resultType="ExamVo" parameterType="map">
	<![CDATA[
select 
        r.rnum,
        r.classNo,
        r.examNo,
        r.examTitle,
        r.problemAmount,
        r.startDate,
        r.endDate,
        r.numSubmit,
        r.attendNum,
        r.examType
from(select
            rownum rnum,
            o.classNo,
            o.examNo,
            o.examTitle,
            o.problemAmount,
            o.startDate,
            o.endDate,
            o.numSubmit,
            o.attendNum,
            o.examType
            from( select
                        e.class_no classNo,
                        e.exam_no examNo,
                        e.exam_title examTitle,
                        sc.problemAmount,
                        TO_CHAR(start_date,'yyyy-MM-dd hh:mm') startDate,
						TO_CHAR(end_date,'yyyy-MM-dd hh:mm') endDate ,
                        sc.numSubmit,
                        sc.attendNum,
                        e.exam_type examType
   					from exam e,(select
                                    sv.exam_no,
                                    sv.stcount problemAmount,
                                    count(sv.chcount) attendNum,
                                    count(case when sv.result = '진행' then 1 end) numSubmit
                               	 from (select 
                                           s.join_no,
                                           q.exam_no,
                                           count(status) stcount,
                                           count(case when s.status = '제출' or s.status = '완료' then 1 end) chcount,
                                           decode(count(status),count(case when s.status = '제출' or s.status = '완료' 
                                           or s.status = '저장' then 1 end),'진행','대기') result                                                    
                                      from solve s , question q ,join_users j 
                                      where s.question_no = q.question_no
                                      and s.join_no = j.join_no
                                      and j.type != '선생님'
                                      group by s.join_no ,q.exam_no)sv
                               group by sv.exam_no,sv.stcount)sc
		   			 where e.exam_no = sc.exam_no
		   			 order by e.exam_no desc)o)r
		    
                
               where  ]]>

		<if test="keyward != null and keyward != '' ">
			<![CDATA[		
			r.examTitle LIKE '%'|| #{keyward} ||'%'
			and
			]]>   
		</if>
                
        <![CDATA[
                r.rnum >= #{startNum}
   		 		and r.rnum <= #{endNum}
   		 		and r.classNo = #{classNo}
                
		]]>

	</select>

	<!--시험리스트갯수 -->
	<select id="selectTotalCnt" resultType="int" parameterType="map">
	 	<![CDATA[
	 		select
	 		count(*)
			from exam 
			where 
		]]>

		<if test="keyward != null and keyward != '' ">
			<![CDATA[		
			exam_Title LIKE '%'|| #{keyward} ||'%' 
			and
			]]>
			
		</if>
		
		<![CDATA[		
			class_no = #{classNo}
	 	]]>

	</select>


	<!-- 시험의 문제들 리스트 -->
	<select id="examprolist" resultType="ProblemVo" parameterType="map">
		<![CDATA[
		select 
			r.rnum,
			r.ordernum,
			r.problemtitle,
			r.mypoint mypoint,
			r.result,
			r.whether,
			r.type
		from(select 
				 rownum rnum,
				 o.orderNum,
				 o.problemTitle,
				 o.mypoint mypoint,
				 o.result,
				 o.whether,
				 o.type
			 from(select
						q.order_num orderNum,
						p.problem_title problemTitle,
						s.mypoint mypoint,
						decode(q.point,s.mypoint,'O','X') result,
						decode(s.status,'완료','채점완료','미채점') whether,
						p.type type
						
					from solve s, question q, problem p 
					where s.question_no = q.question_no
					and p.problem_no = q.problem_no
					and q.exam_no = ${examNo}
					and s.join_no = ${joinNo}
					and (s.status = '제출' or s.status =  '완료')
			        order by q.order_num desc)o)r
		where r.rnum >= #{startNum}
	   	and r.rnum <= #{endNum}
			        
		]]>
	</select>

	<!--시험리스트갯수 -->
	<select id="selectproTotalCnt" resultType="int" parameterType="int">
	 	<![CDATA[
	 		
			select 
       			count(*) count 
			FROM question q , exam e
			where e.exam_no = q.exam_no
			and e.exam_no = #{examNo}
			group by e.exam_no
	 	]]>

	</select>

	<!-- 시험의 사람 리스트 -->
	<select id="examuserlist" resultType="JoinUserVo" parameterType="int">
		<![CDATA[
		   select 
           
			cl.join_no joinNo,
            u.name username,
		    decode(cl.count,cl.encount,'완료',
                decode(cl.count,cl.encount+cl.jecount,'제출',
                     decode(cl.count,cl.chcount,'대기중','진행중'
                    ))) result
			from users u,(SELECT
                            e.exam_no,
                            j.user_no,
                            j.join_no,
                            count (s.status) count,
                            count (case when s.status = '출제' then 1 end) chcount,
                            count (case when s.status = '저장' then 1 end) secount,
                            count (case when s.status = '제출' then 1 end) jecount,
                            count (case when s.status = '완료' then 1 end) encount
                     FROM question q , exam e, class c , join_users j ,solve s
                     where e.exam_no = q.exam_no
                     and e.class_no = c.class_no
                     and j.class_no = c.class_no
                     and j.join_no = s.join_no
                     and s.question_no = q.question_no
                     
                     group by j.user_no,e.exam_no,j.join_no)cl
        where u.no = cl.user_no
		and cl.exam_no = #{examNo}
		]]>
	</select>

	<select id="selectexam" resultType="ExamVo" parameterType="int">
		<![CDATA[
		select  
	    	exam_no examNo,
	    	exam_title examTitle,
	    	exam_type examType,
	   	 	time,
	   	 	
	   	 	TO_CHAR(start_date,'yyyy-MM-dd hh:mm:ss') startDate,
			TO_CHAR(end_date,'yyyy-MM-dd hh:mm:ss') endDate
			
		from exam
		where exam_no = #{examNo}
		]]>
	</select>

	<select id="selectquestion" resultType="QuestionVo" parameterType="int">
		<![CDATA[
		select
    		p.problem_no problemNo,
    		p.problem_title problemTitle,
    		p.type problemType,
    		q.point point
		from question q, problem p
		where q.problem_no = p.problem_no
		and q.exam_no = #{examNo}
		order by q.order_num
		]]>
	</select>

	<update id="examupdate" parameterType="ExamVo">
		<![CDATA[
			update exam
			set]]>
		<if test="examTitle != null and examTitle != ''">

			exam_title = #{examTitle}
		</if>
		<if test="examType != null and examType != ''">
			,exam_type = #{examType}
		</if>

		<if test="time != null and time != ''">
			,time = #{time}
		</if>

		<if test="startDate != null and startDate != ''">
			,start_date = TO_DATE(#{startDate},'yyyy-mm-dd hh:mi:ss')
		</if>

		<if test="endDate != null and endDate != ''">
			,end_date = TO_DATE(#{endDate},'yyyy-mm-dd hh:mi:ss')
		</if>
			    
		<![CDATA[
			where exam_no = #{examNo}
		]]>
	</update>

	<delete id="qeustiondelete" parameterType="int">
		<![CDATA[
			delete 
			from question
			where exam_no = #{examNo}
			]]>
	</delete>

	<delete id="solvedelete" parameterType="int">
		<![CDATA[
			 delete 
            from solve s
            where s.question_no in (select question_no 
                                    from question
                                    where exam_no = #{examNo})
			]]>
	</delete>

	<insert id="questionupdate" parameterType="QuestionVo">
		<![CDATA[
			insert into question VALUES(
							seq_question_no.nextval,
							#{examNo},
							#{problemNo},
							#{point},
							#{order}
							)	
		]]>
	</insert>
	<!-- 시험을 풀었는지 안풀었는지 -->
	<select id="getAttendance" parameterType="int" resultType="int">
		<![CDATA[
			select  
				count(*)
			from solve s ,question q
			where s.question_no(+) = q.question_no
			and q.exam_no = #{examNo}
			and s.join_no = #{joinNo}
			and (s.status = '제출' or s.status = '완료')
		]]>
	</select>

	<!-- 시험을 풀었는지 안풀었는지 -->
	<select id="getsolve" parameterType="int" resultType="int">
		<![CDATA[
			 select  
				count(*)
			from solve s ,question q
			where s.question_no(+) = q.question_no
			and q.exam_no = #{examNo}
			and s.join_no = #{joinNo}
			and s.status = '출제'
		]]>
	</select>

	<!-- 시험 풀기 시작시~~~~~~~~~~~~~ -->
	<select id="examstart" parameterType="map" resultType="ExamVo">
		<![CDATA[
			select
			    e.exam_no examNo,
			    e.exam_title examTitle,
			    e.exam_type examType,
			    time,
                qu.count problemAmount,
                sq.count solveAmount,
               TO_CHAR(e.start_date,'yyyy-MM-dd hh24:mm') startDate,
			   TO_CHAR(e.end_date,'yyyy-MM-dd hh24:mm') endDate
			from exam e,(select
                            exam_no,
                            count(*) count
                         from question
                         group by exam_no)qu,(select 
										        count(*) count,
										        q.exam_no
										     from solve s,question q
										     where s.question_no = q.question_no
										     and s.status = '저장'
										     and s.join_no = #{joinNo}
										     group by exam_no)sq
             
            where e.exam_no = qu.exam_no
            and e.exam_no = sq.exam_no(+)
			and e.exam_no = #{examNo}
		]]>
	</select>


	<select id="startquestion" parameterType="map" resultType="QuestionVo">
		<![CDATA[
			select
				problem_no problemNo,
				point
			from question
			where order_num = #{orderNum}
            and exam_no = #{examNo}
		]]>
	</select>

	<select id="selectproblem" parameterType="int" resultType="ProblemVo">
		<![CDATA[
			select
				type type,
				content,
				content_image contentImage,
				description description,
				ANSWER answer
			from problem
			where problem_no = #{problemNo}
			
		]]>
	</select>

	<select id="selectanswer" parameterType="map" resultType="String">
		<![CDATA[
			select
				SUBMIT_ANSWER
			from solve
			where join_no = #{joinNo}
			and question_no = (select 
			                        question_no
			                   from question
			                   where exam_no = #{examNo}
			                   and order_num = #{orderNum})
			
		]]>
	</select>

	<select id="getpoint" parameterType="map" resultType="int">
		<![CDATA[
			select
				MYPOINT
			from solve
			where join_no = #{joinNo}
			and question_no = (select 
			                        question_no
			                   from question
			                   where exam_no = #{examNo}
			                   and order_num = #{orderNum})
			
		]]>
	</select>

	<select id="selectchoice" parameterType="int" resultType="ChoiceVo">
		<![CDATA[
			select
			    choice_content choiceContent,
			    attachment_file attachmentFile,
			    order_no orderNo
			from choice
			where problem_no = #{problemNo}
			order by order_no
		]]>
	</select>
	<update id="updateSolve" parameterType="map">
		update solve
		set submit_answer = #{answer},
		status = '저장'
		where join_no = #{joinNo}
		and (status = '저장' or
		status = '출제')
		and question_no = (select
		question_no
		from question
		where exam_no = #{examNo}
		and order_num = #{orderNum})
	</update>

	<update id="updatefSolve" parameterType="map">
		update solve
		set ATTACHMENT_FILE = #{saveName},
		status = '저장'
		where join_no = #{joinNo}
		and question_no =
		(select
		question_no
		from question
		where exam_no = #{examNo}
		and order_num = #{orderNum})
	</update>

	<update id="examfinish" parameterType="map">
		update solve
		set status = '제출'
		where join_no = #{joinNo}
		and question_no in (select
		question_no
		from question
		where exam_no = #{examNo})
	</update>

	<update id="Autoscoring" parameterType="map">
		update (
		select
		s.mypoint mypoint,
		q.point point
		from solve s,question q,problem p
		where s.question_no =
		q.question_no
		and q.problem_no = p.problem_no
		and s.SUBMIT_ANSWER = p.ANSWER
		and q.exam_no = #{examNo}
		and s.join_no = #{joinNo}
		)

		set mypoint = point
	</update>


	<update id="grantpoint" parameterType="map">
		update solve
		set MYPOINT = #{point},
		STATUS = '완료'
		where join_no = #{joinNo}
		and question_no in (select
		question_no
		from
		question
		where exam_no = #{examNo}
		and order_num = #{orderNum})
	</update>

	<!-- 문제풀기시 리스트 갯수 -->
	<select id="examsolvecount" parameterType="map" resultType="int">
		<![CDATA[
			select 
				count(*)
			from question q  ,solve s
			where q.question_no = s.question_no
			and exam_no = #{examNo}
			and join_no = #{joinNo}
		]]>
	</select>


	<!-- 문제풀기시 리스트 -->
	<select id="examsolveList" parameterType="map" resultType="QuestionVo">
		<![CDATA[
			select
				q.order_num orderNum,
				p.type problemType,
				s.mypoint mypoint,
				decode(q.point,s.mypoint,'O','X') result
			from question q, solve s,problem p
			where q.question_no = s.question_no
			and p.problem_no = q.problem_no
			and s.join_no = #{joinNo}
			and q.exam_no = #{examNo}
			and order_num >= #{startNum}
			and order_num <= #{endNum}
			order by order_num asc
		]]>
	</select>


	<!-- 문제풀기시 리스트 -->
	<select id="getsolvetime" parameterType="int" resultType="int">
		<![CDATA[
			select
			     count(*)
			from exam
			where exam_no = #{examNo}
			and start_date < sysdate
		]]>
	</select>

	<update id="allscoring" parameterType="map">
		<![CDATA[
			 update (
		        select
		            s.status,
		            s.mypoint
				from solve s,question q,exam e
				where s.question_no = q.question_no
		        and e.exam_no = q.exam_no
		        and e.exam_no = #{examNo}
		]]>
		<if test="joinNo != null and joinNo != '' and joinNo != 0 ">
			and join_no = #{joinNo}
		</if>
	
	<![CDATA[
		and (s.status = '출제' or s.status = '저장')
       		 )
		set mypoint = 0,
        status = '완료'
	]]>

	</update>


	<update id="endtimeexam">
		<![CDATA[
			 update (
		        select
		            s.status,
		            s.mypoint
				from solve s,question q,exam e
				where s.question_no = q.question_no
		        and e.exam_no = q.exam_no
                and e.end_date < sysdate
                and (s.status = '출제' or s.status = '저장')
       		 )
		set mypoint = 0,
        status = '완료'
	
		]]>
	</update>

	<select id="exammodifywhere" parameterType="int" resultType="int">
	<![CDATA[
		select
            count(*)
            from question q,solve s
            where s.question_no = q.question_no
            and (s.status = '제출' or s.status = '완료')
            and q.exam_no = #{examNo}
		]]>
	</select>

</mapper>